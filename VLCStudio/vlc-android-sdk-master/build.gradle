buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'org.ajoberstar:gradle-git:1.3.2'
    }
}
apply plugin: 'com.android.library'
android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 13
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:23.1.0'
    //compile files('libs/AFPSDK-1.0.0.jar')
    compile(name: 'exolibrary1_2', ext: 'aar')
}
task makeJar(type: Copy) {
    delete 'build/libs/playersdk.jar'
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', 'playersdk.jar')
}
makeJar.dependsOn(build)

allprojects {
    version = VERSION_NAME
    group = GROUP

    repositories {
        mavenCentral()
    }
}

import org.ajoberstar.grgit.Grgit

project.ext.vlcAndroidSource = file('vlc-android')
project.ext.vlcSource = file('vlc-android/vlc')

task cloneVlcAndroid << {
    Grgit.clone(uri: 'http://git.videolan.org/git/vlc-ports/android.git',
            dir: project.ext.vlcAndroidSource)
}

// Only clone once.
cloneVlcAndroid.onlyIf { !project.ext.vlcAndroidSource.exists() }

task updateVlcCheckout(dependsOn: 'cloneVlcAndroid') << {
    try {
        def repo = Grgit.open(project.ext.vlcSource)
        repo.pull(rebase: true)
    }
    catch (RuntimeException e) {
        logger.warn("Wasn't able to update checkout at " + project.ext.vlcSource + ": "
                + e.getClass() + " - " + e.getLocalizedMessage());
    }
}

// Don't update vlc checkout if it doesn't exist yet.
// This is the case when we're building for the first time.
updateVlcCheckout.onlyIf { project.ext.vlcSource.exists() }

task buildVlcArmv7a(type: Exec, dependsOn: 'updateVlcCheckout') {
    workingDir project.ext.vlcAndroidSource
    commandLine './compile.sh'
    args "-a", "armeabi-v7a"
}

task buildVlcX86(type: Exec, dependsOn: 'buildVlcArmv7a') {
    workingDir project.ext.vlcAndroidSource
    commandLine './compile.sh'
    args "-a", "x86"
}

task buildVlcArm(type: Exec, dependsOn: 'buildVlcX86') {
    workingDir project.ext.vlcAndroidSource
    commandLine './compile.sh'
    args "-a", "armeabi"
}

task copyJniLibs(type: Copy, dependsOn: 'buildVlcArm') {
    from(vlcAndroidSource.getAbsolutePath() + '/libvlc/jni/libs/')
    into('src/main/jniLibs/')
}

task buildVlc(type: Copy, dependsOn: 'copyJniLibs') {
    from(vlcAndroidSource.getAbsolutePath() + '/libvlc/src/')
    into('src/main/java/')
}

//upload aar to maven central with sonatype
/*apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/8cfffbbff6b9094af1c92318ea5d5a5bb0b8bb30/gradle-mvn-push.gradle'*/
